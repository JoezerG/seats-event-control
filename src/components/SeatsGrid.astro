---
import { SeatsZonesFloor_1, SeatsZonesFloor_2 } from "../consts/seat-schema";
---

<div id="seats-grid">
  <div id="altar">
    <p>Altar</p>
  </div>
  {
    SeatsZonesFloor_1.map(({ name, id, seats, columns, rows }) => (
      <div
        id={id}
        class="zone"
        class:list={[`columns-${columns}`, `rows-${rows}`]}
      >
        {Array(seats)
          .fill(null)
          .map((_, i) => (
            <span class="seat">{i + 1}</span>
          ))}
      </div>
    ))
  }
</div>

<style lang="scss">
  #seats-grid {
    display: grid;
    grid-template-columns: repeat(29, 1fr);
    grid-template-rows: repeat(21, 1fr);
    width: 100%;
    height: 100vh;
    background-color: aqua;

    .zone {
      background-color: blue;
      color: white;
      display: grid;
      gap: 5px;
      padding: 5px;
    }

    .seat {
      width: 100%;
      height: 100%;
      background-color: green;
      display: grid;
      place-content: center;
      text-align: center;
      border-radius: 6px;

      &:hover {
        background-color: blueviolet;
        cursor: pointer;
      }
    }
  }

  .columns {
    &-4 {
      grid-template-columns: repeat(4, 1fr);
    }
    &-5 {
      grid-template-columns: repeat(5, 1fr);
    }
    &-6 {
      grid-template-columns: repeat(6, 1fr);
    }
    &-8 {
      grid-template-columns: repeat(8, 1fr);
    }
    &-10 {
      grid-template-columns: repeat(10, 1fr);
    }
    &-12 {
      grid-template-columns: repeat(12, 1fr);
    }
  }

  .rows {
    &-2 {
      grid-template-rows: repeat(2, 1fr);
    }
    &-3 {
      grid-template-rows: repeat(3, 1fr);
    }
    &-4 {
      grid-template-rows: repeat(4, 1fr);
    }
    &-5 {
      grid-template-rows: repeat(5, 1fr);
    }
    &-6 {
      grid-template-rows: repeat(6, 1fr);
    }
  }

  #altar {
    grid-column: 10/24;
    grid-row: 1/5;
    background-color: red !important;
    display: grid;
    place-content: center;
  }

  #Z-1 {
    grid-column: 25/30;
    grid-row: 2/6;
  }

  #Z-2 {
    grid-column: 25/30;
    grid-row: 7/13;
  }

  #Z-3 {
    grid-column: 20/24;
    grid-row: 7/13;
    rotate: -10deg;
  }

  #Z-4 {
    grid-column: 15/19;
    grid-row: 7/13;
  }

  #Z-5 {
    grid-column: 10/14;
    grid-row: 7/13;
    rotate: 10deg;
  }

  #Z-6 {
    grid-column: 5/9;
    grid-row: 7/13;
  }

  #Z-7 {
    grid-column: 5/9;
    grid-row: 2/6;
    order: -1;
  }

  #Z-8 {
    grid-column: 1/4;
    grid-row: 2/9;
  }

  #Z-9 {
    grid-column: 1/4;
    grid-row: 10/14;
  }

  #Z-10 {
    grid-column: 5/10;
    grid-row: 14/18;
  }

  #Z-11 {
    grid-column: 11/17;
    grid-row: 15/18;
  }

  #Z-12 {
    grid-column: 18/24;
    grid-row: 15/17;
  }

  #Z-13 {
    grid-column: 25/30;
    grid-row: 15/17;
  }

  #Z-13 {
    grid-column: 25/30;
    grid-row: 15/17;
  }

  #Z-14 {
    grid-column: 5/10;
    grid-row: 19/22;
  }

  #Z-15 {
    grid-column: 12/17;
    grid-row: 19/22;
  }
</style>
